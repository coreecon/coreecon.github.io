"use strict";(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[4015],{92213:(t,e,a)=>{a.d(e,{Q:()=>r});var n=a(59110),s=a(64215),i=a(41461);class r{constructor(t){this.isDisposed=!1,this._onMessage=async t=>{if(!this._channel)return;const{_contents:e}=this,a=t.data,{path:r}=a;let o,h=null;switch(a.method){case"readdir":o=await e.get(r,{content:!0}),h=[],"directory"===o.type&&o.content&&(h=o.content.map((t=>t.name)));break;case"rmdir":await e.delete(r);break;case"rename":await e.rename(r,a.data.newPath);break;case"getmode":o=await e.get(r),h="directory"===o.type?s.Lt:s.IO;break;case"lookup":try{o=await e.get(r),h={ok:!0,mode:"directory"===o.type?s.Lt:s.IO}}catch(t){h={ok:!1}}break;case"mknod":o=await e.newUntitled({path:n.PathExt.dirname(r),type:Number.parseInt(a.data.mode)===s.Lt?"directory":"file",ext:n.PathExt.extname(r)}),await e.rename(o.path,r);break;case"getattr":o=await e.get(r),h={dev:1,nlink:1,uid:0,gid:0,rdev:0,size:o.size||0,blksize:i.cn,blocks:Math.ceil(o.size||0/i.cn),atime:o.last_modified,mtime:o.last_modified,ctime:o.created,timestamp:0};break;case"get":if(o=await e.get(r,{content:!0}),"directory"===o.type)break;h={content:"json"===o.format?JSON.stringify(o.content):o.content,format:o.format};break;case"put":await e.save(r,{content:"json"===a.data.format?JSON.parse(a.data.data):a.data.data,type:"file",format:a.data.format});break;default:h=null}this._channel.postMessage(h)},this._channel=null,this._enabled=!1,this._contents=t.contents}get enabled(){return this._enabled}enable(){this._channel?console.warn("BroadcastChannel already created and enabled"):(this._channel=new BroadcastChannel(i.a7),this._channel.addEventListener("message",this._onMessage),this._enabled=!0)}disable(){this._channel&&(this._channel.removeEventListener("message",this._onMessage),this._channel=null),this._enabled=!1}dispose(){this.isDisposed||(this.disable(),this.isDisposed=!0)}}},46525:(t,e,a)=>{a.d(e,{A:()=>o});var n=a(59110),s=a(16413),i=a(92233);const r="JupyterLite Storage";class o{constructor(t){this.reduceBytesToString=(t,e)=>t+String.fromCharCode(e),this._serverContents=new Map,this._storageName=r,this._storageDrivers=null,this._localforage=t.localforage,this._storageName=t.storageName||r,this._storageDrivers=t.storageDrivers||null,this._ready=new i.PromiseDelegate}async initialize(){await this.initStorage(),this._ready.resolve(void 0)}async initStorage(){this._storage=this.createDefaultStorage(),this._counters=this.createDefaultCounters(),this._checkpoints=this.createDefaultCheckpoints()}get ready(){return this._ready.promise}get storage(){return this.ready.then((()=>this._storage))}get counters(){return this.ready.then((()=>this._counters))}get checkpoints(){return this.ready.then((()=>this._checkpoints))}get defaultStorageOptions(){const t=this._storageDrivers&&this._storageDrivers.length?this._storageDrivers:null;return{version:1,name:this._storageName,...t?{driver:t}:{}}}createDefaultStorage(){return this._localforage.createInstance({description:"Offline Storage for Notebooks and Files",storeName:"files",...this.defaultStorageOptions})}createDefaultCounters(){return this._localforage.createInstance({description:"Store the current file suffix counters",storeName:"counters",...this.defaultStorageOptions})}createDefaultCheckpoints(){return this._localforage.createInstance({description:"Offline Storage for Checkpoints",storeName:"checkpoints",...this.defaultStorageOptions})}async newUntitled(t){var e,a,i;const r=null!==(e=null==t?void 0:t.path)&&void 0!==e?e:"",o=null!==(a=null==t?void 0:t.type)&&void 0!==a?a:"notebook",c=(new Date).toISOString();let l=n.PathExt.dirname(r);const d=n.PathExt.basename(r),m=n.PathExt.extname(r),f=await this.get(l);let p,u="";switch(r&&!m&&f?(l=`${r}/`,u=""):l&&d?(l=`${l}/`,u=d):(l="",u=r),o){case"directory":u=`Untitled Folder${await this._incrementCounter("directory")||""}`,p={name:u,path:`${l}${u}`,last_modified:c,created:c,format:"json",mimetype:"",content:null,size:0,writable:!0,type:"directory"};break;case"notebook":{const t=await this._incrementCounter("notebook");u=u||`Untitled${t||""}.ipynb`,p={name:u,path:`${l}${u}`,last_modified:c,created:c,format:"json",mimetype:s.vJ.JSON,content:h.EMPTY_NB,size:JSON.stringify(h.EMPTY_NB).length,writable:!0,type:"notebook"};break}default:{const e=null!==(i=null==t?void 0:t.ext)&&void 0!==i?i:".txt",a=await this._incrementCounter("file"),n=s.HB.getType(e)||s.vJ.OCTET_STREAM;let r;r=s.HB.hasFormat(e,"text")||-1!==n.indexOf("text")?"text":-1!==e.indexOf("json")||-1!==e.indexOf("ipynb")?"json":"base64",u=u||`untitled${a||""}${e}`,p={name:u,path:`${l}${u}`,last_modified:c,created:c,format:r,mimetype:n,content:"",size:0,writable:!0,type:"file"};break}}const g=p.path;return await(await this.storage).setItem(g,p),p}async copy(t,e){let a=n.PathExt.basename(t);for(e=""===e?"":`${e.slice(1)}/`;await this.get(`${e}${a}`,{content:!0});){const t=n.PathExt.extname(a),e=a.replace(t,"");a=`${e} (copy)${t}`}const s=`${e}${a}`;let i=await this.get(t,{content:!0});if(!i)throw Error(`Could not find file with path ${t}`);return i={...i,name:a,path:s},await(await this.storage).setItem(s,i),i}async get(t,e){if(""===(t=decodeURIComponent(t.replace(/^\//,""))))return await this._getFolder(t);const a=await this.storage,i=await a.getItem(t),r=await this._getServerContents(t,e),o=i||r;if(!o)return null;if(!(null==e?void 0:e.content))return{size:0,...o,content:null};if("directory"===o.type){const e=new Map;await a.iterate(((a,n)=>{n===`${t}/${a.name}`&&e.set(a.name,a)}));const i=r?r.content:Array.from((await this._getServerDirectory(t)).values());for(const t of i)e.has(t.name)||e.set(t.name,t);const h=[...e.values()];return{name:n.PathExt.basename(t),path:t,last_modified:o.last_modified,created:o.created,format:"json",mimetype:s.vJ.JSON,content:h,size:0,writable:!0,type:"directory"}}return o}async rename(t,e){const a=decodeURIComponent(t),s=await this.get(a,{content:!0});if(!s)throw Error(`Could not find file with path ${a}`);const i=(new Date).toISOString(),r=n.PathExt.basename(e),o={...s,name:r,path:e,last_modified:i},h=await this.storage;if(await h.setItem(e,o),await h.removeItem(a),await(await this.checkpoints).removeItem(a),"directory"===s.type){let a;for(a of s.content)await this.rename(n.URLExt.join(t,a.name),n.URLExt.join(e,a.name))}return o}async save(t,e={}){var a;t=decodeURIComponent(t);const i=n.PathExt.extname(null!==(a=e.name)&&void 0!==a?a:"");let r=await this.get(t);if(r||(r=await this.newUntitled({path:t,ext:i,type:"file"})),!r)return null;const o=(new Date).toISOString();if(r={...r,...e,last_modified:o},e.content&&"base64"===e.format)if(".ipynb"===i){const t=this.unescapeContent(e.content),a=t.length;r={...r,content:JSON.parse(t),format:"json",type:"notebook",size:a}}else if(s.HB.hasFormat(i,"json")){const t=this.unescapeContent(e.content),a=t.length;r={...r,content:JSON.parse(t),format:"json",type:"file",size:a}}else if(s.HB.hasFormat(i,"text")){const t=this.unescapeContent(e.content),a=t.length;r={...r,content:t,format:"text",type:"file",size:a}}else r={...r,size:atob(e.content).length};return await(await this.storage).setItem(t,r),r}unescapeContent(t){return decodeURIComponent(escape(atob(t)))}async delete(t){const e=`${t=decodeURIComponent(t)}/`,a=(await(await this.storage).keys()).filter((a=>a===t||a.startsWith(e)));await Promise.all(a.map(this.forgetPath,this))}async forgetPath(t){await Promise.all([(await this.storage).removeItem(t),(await this.checkpoints).removeItem(t)])}async createCheckpoint(t){var e;const a=await this.checkpoints;t=decodeURIComponent(t);const n=await this.get(t,{content:!0});if(!n)throw Error(`Could not find file with path ${t}`);const s=(null!==(e=await a.getItem(t))&&void 0!==e?e:[]).filter(Boolean);return s.push(n),s.length>5&&s.splice(0,s.length-5),await a.setItem(t,s),{id:""+(s.length-1),last_modified:n.last_modified}}async listCheckpoints(t){return(await(await this.checkpoints).getItem(t)||[]).filter(Boolean).map(this.normalizeCheckpoint,this)}normalizeCheckpoint(t,e){return{id:e.toString(),last_modified:t.last_modified}}async restoreCheckpoint(t,e){t=decodeURIComponent(t);const a=(await(await this.checkpoints).getItem(t)||[])[parseInt(e)];await(await this.storage).setItem(t,a)}async deleteCheckpoint(t,e){t=decodeURIComponent(t);const a=await(await this.checkpoints).getItem(t)||[],n=parseInt(e);a.splice(n,1),await(await this.checkpoints).setItem(t,a)}async _getFolder(t){const e=new Map,a=await this.storage;await a.iterate(((t,a)=>{a.includes("/")||e.set(t.path,t)}));for(const a of(await this._getServerDirectory(t)).values())e.has(a.path)||e.set(a.path,a);return t&&0===e.size?null:{name:"",path:t,last_modified:new Date(0).toISOString(),created:new Date(0).toISOString(),format:"json",mimetype:s.vJ.JSON,content:Array.from(e.values()),size:0,writable:!0,type:"directory"}}async _getServerContents(t,e){const a=n.PathExt.basename(t);let i=(await this._getServerDirectory(n.URLExt.join(t,".."))).get(a);if(!i)return null;if(i=i||{name:a,path:t,last_modified:new Date(0).toISOString(),created:new Date(0).toISOString(),format:"text",mimetype:s.vJ.PLAIN_TEXT,type:"file",writable:!0,size:0,content:""},null==e?void 0:e.content)if("directory"===i.type){const e=await this._getServerDirectory(t);i={...i,content:Array.from(e.values())}}else{const e=n.URLExt.join(n.PageConfig.getBaseUrl(),"files",t),r=await fetch(e);if(!r.ok)return null;const o=i.mimetype||r.headers.get("Content-Type"),h=n.PathExt.extname(a);if("notebook"===i.type||s.HB.hasFormat(h,"json")||-1!==(null==o?void 0:o.indexOf("json"))||t.match(/\.(ipynb|[^/]*json[^/]*)$/)){const t=await r.text();i={...i,content:JSON.parse(t),format:"json",mimetype:i.mimetype||s.vJ.JSON,size:t.length}}else if(s.HB.hasFormat(h,"text")||-1!==o.indexOf("text")){const t=await r.text();i={...i,content:t,format:"text",mimetype:o||s.vJ.PLAIN_TEXT,size:t.length}}else{const t=await r.arrayBuffer(),e=new Uint8Array(t);i={...i,content:btoa(e.reduce(this.reduceBytesToString,"")),format:"base64",mimetype:o||s.vJ.OCTET_STREAM,size:e.length}}}return i}async _getServerDirectory(t){const e=this._serverContents.get(t)||new Map;if(!this._serverContents.has(t)){const a=n.URLExt.join(n.PageConfig.getBaseUrl(),"api/contents",t,"all.json");try{const t=await fetch(a),n=JSON.parse(await t.text());for(const t of n.content)e.set(t.name,t)}catch(t){console.warn(`don't worry, about ${t}... nothing's broken. If there had been a\n          file at ${a}, you might see some more files.`)}this._serverContents.set(t,e)}return e}async _incrementCounter(t){var e;const a=await this.counters,n=(null!==(e=await a.getItem(t))&&void 0!==e?e:-1)+1;return await a.setItem(t,n),n}}var h;!function(t){t.EMPTY_NB={metadata:{orig_nbformat:4},nbformat_minor:4,nbformat:4,cells:[]}}(h||(h={}))},41461:(t,e,a)=>{a.d(e,{S1:()=>d,T8:()=>s,a7:()=>i,aZ:()=>l,cn:()=>r,nH:()=>m,ot:()=>f});var n=a(64215);const s=":",i="/api/drive.v1",r=4096,o=new TextEncoder,h=new TextDecoder("utf-8"),c={0:!1,1:!0,2:!0,64:!0,65:!0,66:!0,129:!0,193:!0,514:!0,577:!0,578:!0,705:!0,706:!0,1024:!0,1025:!0,1026:!0,1089:!0,1090:!0,1153:!0,1154:!0,1217:!0,1218:!0,4096:!0,4098:!0};class l{constructor(t){this.fs=t}open(t){const e=this.fs.realPath(t.node);this.fs.FS.isFile(t.node.mode)&&(t.file=this.fs.API.get(e))}close(t){if(!this.fs.FS.isFile(t.node.mode)||!t.file)return;const e=this.fs.realPath(t.node),a=t.flags;let n="string"==typeof a?parseInt(a,10):a;n&=8191;let s=!0;n in c&&(s=c[n]),s&&this.fs.API.put(e,t.file),t.file=void 0}read(t,e,a,n,s){if(n<=0||void 0===t.file||s>=(t.file.data.length||0))return 0;const i=Math.min(t.file.data.length-s,n);return e.set(t.file.data.subarray(s,s+i),a),i}write(t,e,a,n,s){var i;if(n<=0||void 0===t.file)return 0;if(t.node.timestamp=Date.now(),s+n>((null===(i=t.file)||void 0===i?void 0:i.data.length)||0)){const e=t.file.data?t.file.data:new Uint8Array;t.file.data=new Uint8Array(s+n),t.file.data.set(e)}return t.file.data.set(e.subarray(a,a+n),s),n}llseek(t,e,a){let s=e;if(a===n.up)s+=t.position;else if(a===n.NT&&this.fs.FS.isFile(t.node.mode)){if(void 0===t.file)throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES.EPERM);s+=t.file.data.length}if(s<0)throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES.EINVAL);return s}}class d{constructor(t){this.fs=t}getattr(t){return{...this.fs.API.getattr(this.fs.realPath(t)),mode:t.mode,ino:t.id}}setattr(t,e){for(const[a,n]of Object.entries(e))switch(a){case"mode":t.mode=n;break;case"timestamp":t.timestamp=n;break;default:console.warn("setattr",a,"of",n,"on",t,"not yet implemented")}}lookup(t,e){const a=this.fs.PATH.join2(this.fs.realPath(t),e),n=this.fs.API.lookup(a);if(!n.ok)throw this.fs.FS.genericErrors[this.fs.ERRNO_CODES.ENOENT];return this.fs.createNode(t,e,n.mode,0)}mknod(t,e,a,n){const s=this.fs.PATH.join2(this.fs.realPath(t),e);return this.fs.API.mknod(s,a),this.fs.createNode(t,e,a,n)}rename(t,e,a){this.fs.API.rename(t.parent?this.fs.PATH.join2(this.fs.realPath(t.parent),t.name):t.name,this.fs.PATH.join2(this.fs.realPath(e),a)),t.name=a,t.parent=e}unlink(t,e){this.fs.API.rmdir(this.fs.PATH.join2(this.fs.realPath(t),e))}rmdir(t,e){this.fs.API.rmdir(this.fs.PATH.join2(this.fs.realPath(t),e))}readdir(t){return this.fs.API.readdir(this.fs.realPath(t))}symlink(t,e,a){throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES.EPERM)}readlink(t){throw new this.fs.FS.ErrnoError(this.fs.ERRNO_CODES.EPERM)}}class m{constructor(t,e,a,n,s){this._baseUrl=t,this._driveName=e,this._mountpoint=a,this.FS=n,this.ERRNO_CODES=s}request(t){const e=new XMLHttpRequest;e.open("POST",encodeURI(this.endpoint),!1);try{e.send(JSON.stringify(t))}catch(t){console.error(t)}if(e.status>=400)throw new this.FS.ErrnoError(this.ERRNO_CODES.EINVAL);return JSON.parse(e.responseText)}lookup(t){return this.request({method:"lookup",path:this.normalizePath(t)})}getmode(t){return Number.parseInt(this.request({method:"getmode",path:this.normalizePath(t)}))}mknod(t,e){return this.request({method:"mknod",path:this.normalizePath(t),data:{mode:e}})}rename(t,e){return this.request({method:"rename",path:this.normalizePath(t),data:{newPath:this.normalizePath(e)}})}readdir(t){const e=this.request({method:"readdir",path:this.normalizePath(t)});return e.push("."),e.push(".."),e}rmdir(t){return this.request({method:"rmdir",path:this.normalizePath(t)})}get(t){const e=this.request({method:"get",path:this.normalizePath(t)}),a=e.content,n=e.format;switch(n){case"json":case"text":return{data:o.encode(a),format:n};case"base64":{const t=atob(a),e=t.length,s=new Uint8Array(e);for(let a=0;a<e;a++)s[a]=t.charCodeAt(a);return{data:s,format:n}}default:throw new this.FS.ErrnoError(this.ERRNO_CODES.ENOENT)}}put(t,e){switch(e.format){case"json":case"text":return this.request({method:"put",path:this.normalizePath(t),data:{format:e.format,data:h.decode(e.data)}});case"base64":{let a="";for(let t=0;t<e.data.byteLength;t++)a+=String.fromCharCode(e.data[t]);return this.request({method:"put",path:this.normalizePath(t),data:{format:e.format,data:btoa(a)}})}}}getattr(t){const e=this.request({method:"getattr",path:this.normalizePath(t)});return e.atime=new Date(e.atime),e.mtime=new Date(e.mtime),e.ctime=new Date(e.ctime),e.size=e.size||0,e}normalizePath(t){return t.startsWith(this._mountpoint)&&(t=t.slice(this._mountpoint.length)),this._driveName&&(t=`${this._driveName}${s}${t}`),t}get endpoint(){return`${this._baseUrl}api/drive`}}class f{constructor(t){this.FS=t.FS,this.PATH=t.PATH,this.ERRNO_CODES=t.ERRNO_CODES,this.API=new m(t.baseUrl,t.driveName,t.mountpoint,this.FS,this.ERRNO_CODES),this.driveName=t.driveName,this.node_ops=new d(this),this.stream_ops=new l(this)}mount(t){return this.createNode(null,t.mountpoint,511|n.Lt,0)}createNode(t,e,a,n){const s=this.FS;if(!s.isDir(a)&&!s.isFile(a))throw new s.ErrnoError(this.ERRNO_CODES.EINVAL);const i=s.createNode(t,e,a,n);return i.node_ops=this.node_ops,i.stream_ops=this.stream_ops,i}getMode(t){return this.API.getmode(t)}realPath(t){const e=[];let a=t;for(e.push(a.name);a.parent!==a;)a=a.parent,e.push(a.name);return e.reverse(),this.PATH.join.apply(null,e)}}},64215:(t,e,a)=>{a.d(e,{IO:()=>s,Lt:()=>n,NT:()=>r,up:()=>i});const n=16895,s=33206,i=1,r=2}}]);